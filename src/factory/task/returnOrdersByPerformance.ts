import { task, taskStatus } from '@cinerino/factory';

import { IExtendId } from '../autoGenerated';
import * as TaskFactory from '../task';
import TaskName from '../taskName';

export interface IData {
    /**
     * 返品アクションを起こした主体ID
     */
    agentId: string;
    /**
     * 返品対象のパフォーマンスID
     */
    performanceId: string;
    /**
     * 返品対象の注文クライアントID
     */
    clientIds: string[];
}

export interface IAttributes extends TaskFactory.IAttributes {
    data: IData;
}

export type ITask = IExtendId<IAttributes>;

export function createAttributes(params: {
    status: taskStatus;
    runsAt: Date;
    remainingNumberOfTries: number;
    lastTriedAt: Date | null;
    numberOfTried: number;
    executionResults: task.IExecutionResult[];
    data: IData;
}): IAttributes {
    return TaskFactory.createAttributes({ ...params, ...{ name: TaskName.ReturnOrdersByPerformance } });
}
