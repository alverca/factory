import { taskStatus } from '@cinerino/factory';

import { IExtendId } from '../autoGenerated';
import * as TaskFactory from '../task';
import * as TaskExecutionResult from '../taskExecutionResult';
import TaskName from '../taskName';
import { ITransaction } from '../transaction/placeOrder';

export interface IData {
    transaction: ITransaction;
}
export interface IAttributes extends TaskFactory.IAttributes {
    data: IData;
}
/**
 * 注文取引レポート作成タスクインターフェース
 */
export type ITask = IExtendId<IAttributes>;
export function createAttributes(params: {
    status: taskStatus;
    runsAt: Date;
    remainingNumberOfTries: number;
    lastTriedAt: Date | null;
    numberOfTried: number;
    executionResults: TaskExecutionResult.ITaskExecutionResult[];
    data: IData;
}): IAttributes {
    return TaskFactory.createAttributes({ ...params, ...{ name: TaskName.CreatePlaceOrderReport } });
}
