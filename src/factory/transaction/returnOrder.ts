import * as cinerino from '@cinerino/factory';
import * as GMO from '@motionpicture/gmo-service';

import { IExtendId } from '../autoGenerated';

/**
 * クレジットカード売上取消結果インターフェース
 */
export type IReturnCreditCardResult = GMO.services.credit.IAlterTranResult;
/**
 * クレジットカード金額変更結果インターフェース
 */
export type IChangeCreditCardAmountResult = GMO.services.credit.IChangeTranResult;

export import IAgent = cinerino.transaction.returnOrder.IAgent;

/**
 * result interface
 * 取引結果インターフェース
 */
// tslint:disable-next-line:no-empty-interface
export interface IResult {
    returnCreditCardResult?: IReturnCreditCardResult;
    changeCreditCardAmountResult?: IChangeCreditCardAmountResult;
}

/**
 * error interface
 * エラーインターフェース
 */
export type IError = any;

/**
 * 返品理由
 */
export enum Reason {
    /**
     * 購入者自身の都合での返品
     */
    Customer = 'Customer',
    /**
     * 販売者都合での返品
     */
    Seller = 'Seller'
}

/**
 * object of a transaction interface
 * 取引対象物インターフェース
 */
export interface IObject {
    clientUser?: cinerino.clientUser.IClientUser;
    order: cinerino.order.IOrder;
    transaction: cinerino.transaction.ITransaction<cinerino.transactionType.PlaceOrder>;
    cancelName: string;
    cancellationFee: number;
    reason: Reason;
}

export type ITransaction = IExtendId<IAttributes>;

/**
 * 返品取引インターフェース
 */
export interface IAttributes extends cinerino.transaction.IAttributes<cinerino.transactionType.ReturnOrder> {
    /**
     * 購入者
     */
    agent: IAgent;
    /**
     * 取引の結果発生するもの
     */
    result?: IResult;
    /**
     * 取引に関するエラー
     */
    error?: IError;
    /**
     * 取引の対象物
     */
    object: IObject;
}

export type ISearchConditions = cinerino.transaction.ISearchConditions<cinerino.transactionType.ReturnOrder>;
