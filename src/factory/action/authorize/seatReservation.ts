import * as cinerino from '@cinerino/factory';

import * as ActionFactory from '../../action';
import { IExtendId } from '../../autoGenerated';
import { IPerformanceWithDetails } from '../../performance';

export import ObjectType = cinerino.action.authorize.offer.seatReservation.ObjectType;
export import IPurpose = cinerino.action.authorize.offer.seatReservation.IPurpose;

/**
 * 承認されたオファーインターフェース
 */
export interface IAcceptedOffer {
    seat_code?: string;
    ticket_type: string;
    watcher_name: string;
}

/**
 * 仮予約インターフェース
 */
export interface ITmpReservation {
    id: string;
    reservedTicket: cinerino.chevre.reservation.ITicket<cinerino.chevre.reservationType.EventReservation>;
    additionalTicketText: string;
    reservationNumber: string;
    additionalProperty?: cinerino.propertyValue.IPropertyValue<string>[];
}

/**
 * 座席予約承認アクション結果
 */
export interface IResult {
    /**
     * 承認価格
     */
    price: number;
    priceCurrency: cinerino.priceCurrency;
    /**
     * 仮予約リスト
     */
    tmpReservations: ITmpReservation[];
    /**
     * 外部リクエストエンドポイント
     */
    requestEndpoint?: string;
    /**
     * 外部サービスへのリクエスト
     */
    requestBody?: any;
    /**
     * 外部サービスからのレスポンス
     */
    responseBody?: cinerino.chevre.transaction.reserve.ITransaction;
}

/**
 * 座席予約承認アクションオブジェクト
 */
export interface IObject {
    typeOf: cinerino.action.authorize.offer.seatReservation.ObjectType.SeatReservation;
    performance: IPerformanceWithDetails;
    offers: IAcceptedOffer[];
}

export type IError = any;

/**
 * 座席予約承認アクションインターフェース
 */
export interface IAttributes extends ActionFactory.IAttributes {
    purpose: IPurpose;
    agent: ActionFactory.IParticipant;
    recipient: ActionFactory.IParticipant;
    result?: IResult;
    error?: any;
    object: IObject;
    startDate: Date;
    endDate?: Date;
}

export type IAction = IExtendId<IAttributes>;
